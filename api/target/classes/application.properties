spring.application.name=sistema-projeto

# Formato: jdbc:postgresql://<host>:<port>/<nome_do_banco>
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
# Usu�rio do banco de dados
spring.datasource.username=${DB_USER}
# Senha do banco de dados
spring.datasource.password=${DB_PASSWORD}
# Drive
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================================
# CONFIGURA��O DO JPA/HIBERNATE
# ===============================================

# O "dialeto" SQL que o Hibernate deve usar para se comunicar com o Postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# O que o Hibernate deve fazer com seu esquema de banco de dados ao iniciar:
#  - none: (Padr�o para Postgres) N�o faz nada. Voc� gerencia o schema (Ex: com Flyway/Liquibase).
#  - validate: Valida se as tabelas e colunas correspondem �s suas @Entities.
#  - update: Tenta atualizar o schema (adicionar colunas, tabelas). OK para desenvolvimento.
#  - create: (N�o recomendado) Apaga tudo e recria o schema a cada inicializa��o.
#  - create-drop: Cria ao iniciar e destr�i ao fechar. �til para testes.
spring.jpa.hibernate.ddl-auto=update
# Mostra o SQL gerado pelo Hibernate no console
spring.jpa.show-sql=true
# Formata o SQL mostrado no console para ficar mais leg�vel
spring.jpa.properties.hibernate.format_sql=true